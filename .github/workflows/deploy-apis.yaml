name: Deploy API

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: string
        default: 'deploy' # 'deploy' or 'destroy'
      namespace:
        description: 'Kubernetes namespace'
        type: string
        default: 'flight-data'
      release_name:
        description: 'Helm release name'
        type: string
        default: 'flight-data'

env:
  NAMESPACE: ${{ inputs.namespace }}
  RELEASE_NAME: ${{ inputs.release_name }}
  KUBECONFIG: /.kube/config

jobs:
  deploy-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: kubectl use context
        run: |
          kubectl config use-context ${{ secrets.KUBE_CONTEXT }}

      - name: Create namespace if not exists
        if: ${{ inputs.action == 'deploy' }}
        run: |
          kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy APIs
        if: ${{ inputs.action == 'deploy' }}
        run: |
          helm upgrade --install $RELEASE_NAME . \
            -n $NAMESPACE \
            -f values.yaml \
            --set releaseName=$RELEASE_NAME
        working-directory: ${{ github.workspace }}/k8s/apis

      - name: Destroy Example API
        if: ${{ inputs.action == 'destroy' }}
        run: |
          helm uninstall $RELEASE_NAME -n $NAMESPACE --ignore-not-found=true
        working-directory: ${{ github.workspace }}/k8s/apis

      - name: Cleanup namespace
        if: ${{ inputs.action == 'destroy' }}
        run: |
          kubectl delete namespace $NAMESPACE --ignore-not-found=true