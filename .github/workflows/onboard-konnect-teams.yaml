name: Provision Konnect Teams

on:
  workflow_dispatch:
    inputs:
      config:
        description: 'Path to the provisioning config file'
        type: string
        default: examples/platformops/federated/teams/teams.json
      action:
        description: 'Action to perform'
        required: true
        type: choice
        default: 'provision'
        options:
          - 'provision'
          - 'destroy'
      environment:
        description: 'Environment to provision'
        type: choice
        default: 'dev'
        options:
          - 'dev'
          - 'tst'
          - 'acc'
          - 'prd'

jobs:
  generate-offboarding-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      is_empty: ${{ steps.set-matrix.outputs.is_empty }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read Config JSON file
        id: set-matrix
        run: |
          MATRIX=$( cat ${{ github.workspace }}/${{ inputs.config }} | jq -c '[.resources[] | select(.offboarded == true)]' )

          if [[ "$MATRIX" == "[]" ]]; then
            echo "::set-output name=is_empty::true"
            echo "::set-output name=matrix::[]"
            exit 0
          fi

          echo "::set-output name=is_empty::false"
          echo "::set-output name=matrix::$MATRIX"
        shell: bash

  offboard-konnect-teams:
    needs: generate-offboarding-matrix
    if: needs.generate-offboarding-matrix.outputs.is_empty == 'false'
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.generate-offboarding-matrix.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment configuration
        uses: ./.github/actions/load-config
        with:
          environment: ${{ inputs.environment }}
        env:
          KONNECT_PAT: ${{ secrets.KONNECT_PAT }}

      - name: Install MinIO Client
        uses: ./.github/actions/setup-minio-client

      - name: Install vault cli
        uses: eLco/setup-vault@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 'latest'

      - name: Set resource variables from config file
        run: |
          TEAM_NAME_NORMALIZED=$(echo "${{ matrix.name }}" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
          echo "TEAM_NAME_NORMALIZED=$TEAM_NAME_NORMALIZED" >> $GITHUB_ENV

      - name: Check if S3 bucket exists
        id: check-bucket
        shell: bash
        run: |
          if mc ls "s3/$KONNECT_TEAM_RESOURCES_S3_BUCKET_PREFIX.$TEAM_NAME_NORMALIZED" > /dev/null 2>&1; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Terraform Init
        if: steps.check-bucket.outputs.exists == 'true'
        shell: bash
        run: |
          terraform init -upgrade \
          -backend-config=config.s3.tfbackend \
          -backend-config="bucket=$KONNECT_TEAM_RESOURCES_S3_BUCKET_PREFIX.$TEAM_NAME_NORMALIZED" \
          -backend-config="key=tfstate" \
          -backend-config="region=main" \
          -backend-config="access_key=${{ secrets.S3_ACCESS_KEY }}" \
          -backend-config="secret_key=${{ secrets.S3_SECRET_KEY }}"
        working-directory: ${{ github.workspace }}/.github/actions/konnect-team-resources/terraform

      - name: Terraform destroy
        if: steps.check-bucket.outputs.exists == 'true'
        shell: bash
        run: |
          terraform destroy -auto-approve
        working-directory: ${{ github.workspace }}/.github/actions/konnect-team-resources/terraform

  onboard-konnect-teams:
    runs-on: ubuntu-latest
    needs: offboard-konnect-teams
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment configuration
        uses: ./.github/actions/load-config
        with:
          environment: ${{ inputs.environment }}
        env:
          KONNECT_PAT: ${{ secrets.KONNECT_PAT }}

      - name: Provision Konnect Teams
        uses: ./.github/actions/konnect-teams
        with:
          action: ${{ inputs.action }}
          config: $( cat ${{ github.workspace }}/${{ inputs.config }} | jq -r . )
          s3_access_key: ${{ secrets.S3_ACCESS_KEY }}
          s3_secret_key: ${{ secrets.S3_SECRET_KEY }}
          vault_token: ${{ secrets.VAULT_TOKEN }}
          vault_address: ${{env.VAULT_ADDR}}