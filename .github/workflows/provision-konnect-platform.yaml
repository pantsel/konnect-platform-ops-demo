name: Provision Konnect Platform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        type: choice
        default: "dev"
        options:
          - "dev"
          - "tst"
          - "acc"
          - "prd"
      action:
        description: "Action to perform"
        required: true
        type: choice
        default: "provision"
        options:
          - "provision"
          - "destroy"

jobs:
  provision-konnect:
    runs-on: ubuntu-latest

    env:
      ENV_FILE: .github/env/${{ inputs.environment }}.yaml
      TERRAFORM_DIR: ${{ github.workspace }}/terraform/konnect/platform
      TF_S3_BUCKET: konnect.platform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment configuration
        uses: ./.github/actions/load-config
        with:
          environment: ${{ inputs.environment }}
        env:
          KONNECT_PAT: ${{ secrets.KONNECT_PAT }}

      - name: Install MinIO Client
        uses: ./.github/actions/setup-minio-client

      - uses: eLco/setup-vault@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 'latest'
      
      - name: Create S3 bucket if required
        if: ${{ inputs.action == 'provision' }}
        run: |
          ./create-minio-bucket.sh konnect $TF_S3_BUCKET
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
        working-directory: scripts

      - name: Terraform Init
        run: |
          terraform init -upgrade \
            -backend-config=config.s3.tfbackend \
            -backend-config="bucket=$TF_S3_BUCKET" \
            -backend-config="key=tfstate" \
            -backend-config="region=main" \
            -backend-config="access_key=${{ secrets.S3_ACCESS_KEY }}" \
            -backend-config="secret_key=${{ secrets.S3_SECRET_KEY }}" 
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Terraform Plan
        if: ${{ inputs.action == 'provision' }}
        run: |
          terraform plan -out=tfplan
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Terraform Apply
        if: ${{ inputs.action == 'provision' }}
        id: tfapply
        run: |
          terraform apply -auto-approve tfplan
        working-directory: ${{env.TERRAFORM_DIR}}
      
      - name: Terraform destroy
        if: ${{ inputs.action == 'destroy' }}
        run: |
          terraform destroy -auto-approve
        working-directory: ${{env.TERRAFORM_DIR}}