networks:
  konnect-platform-ops-demo:
    driver: bridge

services:
  minio:
    container_name: minio
    image: 'bitnami/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
      - MINIO_DEFAULT_BUCKETS=tfstate
    volumes:
      - minio_data:/bitnami/minio/data
      - ./scripts/create-minio-bucket.sh:/create-minio-bucket.sh
    networks:
      - konnect-platform-ops-demo
    labels:
      - dev.orbstack.domains=s3.minio.local

  vault:
    container_name: vault
    image: hashicorp/vault
    command: server -dev -dev-root-token-id="root"
    ports:
      - '8300:8300'
    healthcheck:
      retries: 5
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8300'
      VAULT_DEV_ROOT_TOKEN_ID: 'root'
      VAULT_TOKEN: ${VAULT_TOKEN:-root}
      VAULT_LOCAL_CONFIG: |-
        {"storage": {"file": {"path": "/vault/file"}}, "listener": [{"tcp": { "address": "0.0.0.0:8300", "tls_disable": true}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}
    cap_add:
        - IPC_LOCK
    volumes:
      - vault_data:/data
      - ./scripts/vault-pki-setup.sh:/vault-pki-setup.sh:rw
    networks:
      - konnect-platform-ops-demo

  registry:
    container_name: registry
    image: registry:2
    ports:
      - '5000:5000'
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_HTTP_SECRET: secret
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - konnect-platform-ops-demo
    labels:
      - dev.orbstack.domains=registry.docker.local

  postgres-kc:
    networks:
      - konnect-platform-ops-demo
    image: postgres:13.1
    container_name: postgres-kc
    hostname: postgres-kc
    volumes:
      - pgdata_kc:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PG_TIMEOUT: 60000

  keycloak:
    container_name: keycloak
    depends_on:
      - postgres-kc
    networks:
      - konnect-platform-ops-demo
    image: quay.io/keycloak/keycloak:24.0.2
    command: start-dev --import-realm
    volumes:
      - ${PWD}/kc:/opt/keycloak/data/import
    healthcheck:
      test: ["CMD", "curl", "-f", "https://keycloak:8080/auth/realms/master"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    ports:
      - 8080:8080
    environment:
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-kc
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: "true"
      # KC_LOG_LEVEL: DEBUG
    labels:
      - dev.orbstack.domains=idp.local

volumes:
  minio_data:
    driver: local
  vault_data:
    driver: local
  registry_data:
    driver: local
  pgdata_kc:
    driver: local